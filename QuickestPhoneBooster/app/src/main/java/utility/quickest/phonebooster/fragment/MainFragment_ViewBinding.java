package utility.quickest.phonebooster.fragment;

import android.support.v4.view.ViewPager;
import android.support.v4.widget.DrawerLayout;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.ToggleButton;
import butterknife.Unbinder;
import butterknife.internal.Utils;
import utility.quickest.phonebooster.view.CircleIndicator;
import utility.quickest.phonebooster.view.CustomRiseNumberTextView;
import utility.quickest.phonebooster.view.RoundProgressBar;
import utility.quickest.phonebooster.R;

public class MainFragment_ViewBinding<T extends MainFragment> implements Unbinder {
    protected T f13370b;
    private View f13371c;
    private View f13372d;
    private View f13373e;
    private View f13374f;
    private View f13375g;
    private View f13376h;
    private View f13377i;
    private View f13378j;
    private View f13379k;
    private View f13380l;
    private View f13381m;
    private View f13382n;
    private View f13383o;
    private View f13384p;
    private View f13385q;
    private View f13386r;
    private View f13387s;
    private View f13388t;
    private View f13389u;
    private View f13390v;
    private View f13391w;
    private View f13392x;

    public MainFragment_ViewBinding(T t, View view) {
        this.f13370b = t;
        View a =  Utils.findRequiredView(view, R.id.action_bar_setting_icon, "field 'mActionBarSettingIcon' and method 'doSetting'");
        t.mActionBarSettingIcon = (ViewGroup)  Utils.castView(a, R.id.action_bar_setting_icon, "field 'mActionBarSettingIcon'", ViewGroup.class);
        this.f13371c = a;
        a.setOnClickListener(new dy(this, t));
        a =  Utils.findRequiredView(view, R.id.cpu_percent_progress_bar, "field 'mCpuPercentProgressBar' and method 'doCleanMemory'");
        t.mCpuPercentProgressBar = (RoundProgressBar)  Utils.castView(a, R.id.cpu_percent_progress_bar, "field 'mCpuPercentProgressBar'", RoundProgressBar.class);
        this.f13372d = a;
        a.setOnClickListener(new ej(this, t));
        t.mCpuPercentProgressBg = (ImageView)  Utils.findRequiredViewAsType(view, R.id.cpu_percent_progress_bg, "field 'mCpuPercentProgressBg'", ImageView.class);
        t.mCpuPercentText = (CustomRiseNumberTextView)  Utils.findRequiredViewAsType(view, R.id.cpu_percent_text, "field 'mCpuPercentText'", CustomRiseNumberTextView.class);
        t.mCpuPercentUnit = (TextView)  Utils.findRequiredViewAsType(view, R.id.cpu_percent_unit, "field 'mCpuPercentUnit'", TextView.class);
        t.mCpuPercentTag = (TextView)  Utils.findRequiredViewAsType(view, R.id.cpu_percent_tag, "field 'mCpuPercentTag'", TextView.class);
        t.mCpuPercentDetailText = (TextView)  Utils.findRequiredViewAsType(view, R.id.cpu_percent_detail_text, "field 'mCpuPercentDetailText'", TextView.class);
        a =  Utils.findRequiredView(view, R.id.cpu_detail_button, "field 'mCpuDetaiButton' and method 'doCleanMemory'");
        t.mCpuDetaiButton = (TextView)  Utils.castView(a, R.id.cpu_detail_button, "field 'mCpuDetaiButton'", TextView.class);
        this.f13373e = a;
        a.setOnClickListener(new en(this, t));
        t.mViewPager = (ViewPager)  Utils.findRequiredViewAsType(view, R.id.viewpager, "field 'mViewPager'", ViewPager.class);
        t.mCircleIndicator = (CircleIndicator)  Utils.findRequiredViewAsType(view, R.id.indicator, "field 'mCircleIndicator'", CircleIndicator.class);
        a =  Utils.findRequiredView(view, R.id.storage_detail_container, "field 'mStorageDetailContainer' and method 'doCleanStorage'");
        t.mStorageDetailContainer = (ViewGroup)  Utils.castView(a, R.id.storage_detail_container, "field 'mStorageDetailContainer'", ViewGroup.class);
        this.f13374f = a;
        a.setOnClickListener(new eo(this, t));
        t.mStoragePercentProgressBar = (RoundProgressBar)  Utils.findRequiredViewAsType(view, R.id.storage_percent_progress_bar, "field 'mStoragePercentProgressBar'", RoundProgressBar.class);
        t.mStoragePercentText = (CustomRiseNumberTextView)  Utils.findRequiredViewAsType(view, R.id.storage_percent_text, "field 'mStoragePercentText'", CustomRiseNumberTextView.class);
        t.mStoragePercentDetailText = (TextView)  Utils.findRequiredViewAsType(view, R.id.storage_percent_detail_text, "field 'mStoragePercentDetailText'", TextView.class);
        a =  Utils.findRequiredView(view, R.id.storage_detail_button, "field 'mStorageDetaiButton' and method 'doCleanStorage'");
        t.mStorageDetaiButton = (TextView)  Utils.castView(a, R.id.storage_detail_button, "field 'mStorageDetaiButton'", TextView.class);
        this.f13375g = a;
        a.setOnClickListener(new ep(this, t));
        t.mCpuCoolingImage = (ImageView)  Utils.findRequiredViewAsType(view, R.id.cpu_cooling_image, "field 'mCpuCoolingImage'", ImageView.class);
        t.mPowerSavingImage = (ImageView)  Utils.findRequiredViewAsType(view, R.id.power_saving1_image, "field 'mPowerSavingImage'", ImageView.class);
        t.mAntivirusImage = (ImageView)  Utils.findRequiredViewAsType(view, R.id.antivirus_image, "field 'mAntivirusImage'", ImageView.class);
        t.mBottomBar = (ViewGroup)  Utils.findRequiredViewAsType(view, R.id.bottom_bar, "field 'mBottomBar'", ViewGroup.class);
        a =  Utils.findRequiredView(view, R.id.exit_dialog, "field 'mExitDialog' and method 'exitNo'");
        t.mExitDialog = (ViewGroup)  Utils.castView(a, R.id.exit_dialog, "field 'mExitDialog'", ViewGroup.class);
        this.f13376h = a;
        a.setOnClickListener(new eq(this, t));
        t.mAdContainer = (ViewGroup)  Utils.findRequiredViewAsType(view, R.id.ad_container, "field 'mAdContainer'", ViewGroup.class);
        a =  Utils.findRequiredView(view, R.id.setting_white_list_container, "field 'mSettingWhiteListContainer' and method 'openWhiteListPage'");
        t.mSettingWhiteListContainer = (ViewGroup)  Utils.castView(a, R.id.setting_white_list_container, "field 'mSettingWhiteListContainer'", ViewGroup.class);
        this.f13377i = a;
        a.setOnClickListener(new er(this, t));
        a =  Utils.findRequiredView(view, R.id.setting_speed_up_ball_container, "field 'mSettingSpeedUpBallContainer' and method 'onSpeedUpBallToggle'");
        t.mSettingSpeedUpBallContainer = (ViewGroup)  Utils.castView(a, R.id.setting_speed_up_ball_container, "field 'mSettingSpeedUpBallContainer'", ViewGroup.class);
        this.f13378j = a;
        a.setOnClickListener(new es(this, t));
        a =  Utils.findRequiredView(view, R.id.setting_ue_improve_toggle_button, "field 'mSettingUeImproveToggleButton' and method 'onUEImproveToggle'");
        t.mSettingUeImproveToggleButton = (ToggleButton)  Utils.castView(a, R.id.setting_ue_improve_toggle_button, "field 'mSettingUeImproveToggleButton'", ToggleButton.class);
        this.f13379k = a;
        a.setOnClickListener(new et(this, t));
        a =  Utils.findRequiredView(view, R.id.setting_about_container, "field 'mSettingAboutContainer' and method 'openAbout'");
        t.mSettingAboutContainer = (ViewGroup)  Utils.castView(a, R.id.setting_about_container, "field 'mSettingAboutContainer'", ViewGroup.class);
        this.f13380l = a;
        a.setOnClickListener(new dz(this, t));
        a =  Utils.findRequiredView(view, R.id.setting_clean_notice_toggle_button, "field 'mSettingCleanNoticeToggleButton' and method 'onCleanNoticeToggle'");
        t.mSettingCleanNoticeToggleButton = (ToggleButton)  Utils.castView(a, R.id.setting_clean_notice_toggle_button, "field 'mSettingCleanNoticeToggleButton'", ToggleButton.class);
        this.f13381m = a;
        a.setOnClickListener(new ea(this, t));
        a =  Utils.findRequiredView(view, R.id.setting_lock_screen_toggle_button, "field 'mSettingLockScreenToggleButton' and method 'onLockScreenToggle'");
        t.mSettingLockScreenToggleButton = (ToggleButton)  Utils.castView(a, R.id.setting_lock_screen_toggle_button, "field 'mSettingLockScreenToggleButton'", ToggleButton.class);
        this.f13382n = a;
        a.setOnClickListener(new eb(this, t));
        a =  Utils.findRequiredView(view, R.id.setting_noti_toolbar_toggle_button, "field 'mSettingNotiToolBarToggleButton' and method 'onNotiToolBarToggle'");
        t.mSettingNotiToolBarToggleButton = (ToggleButton)  Utils.castView(a, R.id.setting_noti_toolbar_toggle_button, "field 'mSettingNotiToolBarToggleButton'", ToggleButton.class);
        this.f13383o = a;
        a.setOnClickListener(new ec(this, t));
        a =  Utils.findRequiredView(view, R.id.setting_ue_improve_text, "field 'mSettingUeImproveText' and method 'openPrivacyPolicyDoc'");
        t.mSettingUeImproveText = (TextView)  Utils.castView(a, R.id.setting_ue_improve_text, "field 'mSettingUeImproveText'", TextView.class);
        this.f13384p = a;
        a.setOnClickListener(new ed(this, t));
        t.mSettingUpdateVersion = (TextView)  Utils.findRequiredViewAsType(view, R.id.setting_update_version, "field 'mSettingUpdateVersion'", TextView.class);
        t.mSettingUeImproveContainer = (ViewGroup)  Utils.findRequiredViewAsType(view, R.id.setting_ue_improve_contaier, "field 'mSettingUeImproveContainer'", ViewGroup.class);
        t.mSettingUeImproveDivider =  Utils.findRequiredView(view, R.id.setting_ue_improve_divider, "field 'mSettingUeImproveDivider'");
        t.mSettingLockScreenContainer = (ViewGroup)  Utils.findRequiredViewAsType(view, R.id.setting_lock_screen_container, "field 'mSettingLockScreenContainer'", ViewGroup.class);
        t.mSettingLockScreenDivider =  Utils.findRequiredView(view, R.id.setting_lock_screen_divider, "field 'mSettingLockScreenDivider'");
        t.mSettingNotiToolbarContainer = (ViewGroup)  Utils.findRequiredViewAsType(view, R.id.setting_noti_toolbar_container, "field 'mSettingNotiToolbarContainer'", ViewGroup.class);
        t.mSettingNotiToolbarDivider =  Utils.findRequiredView(view, R.id.setting_noti_toolbar_divider, "field 'mSettingNotiToolbarDivider'");
        t.mSettingTemperatureUnitValue = (TextView)  Utils.findRequiredViewAsType(view, R.id.setting_temperature_unit_value, "field 'mSettingTemperatureUnitValue'", TextView.class);
        t.mSettingLockScreenTipWithAd = (TextView)  Utils.findRequiredViewAsType(view, R.id.setting_lock_screen_tip_with_ad, "field 'mSettingLockScreenTipWithAd'", TextView.class);
        t.mSettingLockScreenTipNoAd = (TextView)  Utils.findRequiredViewAsType(view, R.id.setting_lock_screen_tip_no_ad, "field 'mSettingLockScreenTipNoAd'", TextView.class);
        t.mDrawerLayoutView = (DrawerLayout)  Utils.findRequiredViewAsType(view, R.id.drawer_layout, "field 'mDrawerLayoutView'", DrawerLayout.class);
        t.mNavigationView = (ViewGroup)  Utils.findRequiredViewAsType(view, R.id.navigation_view, "field 'mNavigationView'", ViewGroup.class);
        View a2 =  Utils.findRequiredView(view, R.id.cpu_cooling_container, "method 'doCPUCooling'");
        this.f13385q = a2;
        a2.setOnClickListener(new ee(this, t));
        a2 =  Utils.findRequiredView(view, R.id.power_saving_container, "method 'doPowerSaving'");
        this.f13386r = a2;
        a2.setOnClickListener(new ef(this, t));
        a2 =  Utils.findRequiredView(view, R.id.antivirus_container, "method 'doAntivirus'");
        this.f13387s = a2;
        a2.setOnClickListener(new eg(this, t));
        a2 =  Utils.findRequiredView(view, R.id.exit_dialog_no, "method 'exitNo'");
        this.f13388t = a2;
        a2.setOnClickListener(new eh(this, t));
        a2 =  Utils.findRequiredView(view, R.id.exit_dialog_yes, "method 'exitYes'");
        this.f13389u = a2;
        a2.setOnClickListener(new ei(this, t));
        a2 =  Utils.findRequiredView(view, R.id.setting_share_container, "method 'doShare'");
        this.f13390v = a2;
        a2.setOnClickListener(new ek(this, t));
        a2 =  Utils.findRequiredView(view, R.id.setting_update_container, "method 'checkUpdate'");
        this.f13391w = a2;
        a2.setOnClickListener(new el(this, t));
        a2 =  Utils.findRequiredView(view, R.id.setting_temperature_unit_container, "method 'setTemperatureUnit'");
        this.f13392x = a2;
        a2.setOnClickListener(new em(this, t));
    }
}
